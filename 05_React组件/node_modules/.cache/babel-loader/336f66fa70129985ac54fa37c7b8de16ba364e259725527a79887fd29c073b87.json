{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  /**\n   * 获取原生的DOM对象\n   *    1.可以使用传统的document来对DOM进行操作\n   *    2.直接从React处获取DOM对象\n   *      步骤:\n   *        1.创建一个存储DOM对象的容器\n   *          - 使用useRef()钩子函数\n   *              钩子函数的注意事项:\n   *                ①React中的钩子函数只能用于函数式组件或自定义钩子\n   *                ②钩子函数只能直接在函数组件中调用\n   */\n  const h1Ref = useRef(); // 创建一个容器\n\n  const clickHandler = e => {\n    // 通过id获取h1\n    const header = document.getElementById('header');\n    // alert(header.innerText)\n    header.innerText = '学习一下React';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'app',\n    ref: h1Ref,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"header\",\n      children: \"\\u6211\\u662F\\u6807\\u9898\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"zFFc1Rm+qHCiLNgxeGfx13Q+EPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","App","_s","h1Ref","clickHandler","e","header","document","getElementById","innerText","className","ref","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/App.js"],"sourcesContent":["import React, { useRef } from 'react'\nimport './App.css'\nconst App = () => {\n  /**\n   * 获取原生的DOM对象\n   *    1.可以使用传统的document来对DOM进行操作\n   *    2.直接从React处获取DOM对象\n   *      步骤:\n   *        1.创建一个存储DOM对象的容器\n   *          - 使用useRef()钩子函数\n   *              钩子函数的注意事项:\n   *                ①React中的钩子函数只能用于函数式组件或自定义钩子\n   *                ②钩子函数只能直接在函数组件中调用\n   */\n  const h1Ref = useRef() // 创建一个容器\n\n  const clickHandler = e => {\n    // 通过id获取h1\n    const header = document.getElementById('header')\n    // alert(header.innerText)\n    header.innerText = '学习一下React'\n  }\n\n  return (\n    <div\n      className={'app'}\n      ref={h1Ref}>\n      <h1 id=\"header\">我是标题</h1>\n      <button onClick={clickHandler}>1</button>\n      <button>2</button>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMC,KAAK,GAAGL,MAAM,CAAC,CAAC,EAAC;;EAEvB,MAAMM,YAAY,GAAGC,CAAC,IAAI;IACxB;IACA,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;IAChD;IACAF,MAAM,CAACG,SAAS,GAAG,WAAW;EAChC,CAAC;EAED,oBACET,OAAA;IACEU,SAAS,EAAE,KAAM;IACjBC,GAAG,EAAER,KAAM;IAAAS,QAAA,gBACXZ,OAAA;MAAIa,EAAE,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjB,OAAA;MAAQkB,OAAO,EAAEd,YAAa;MAAAQ,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzCjB,OAAA;MAAAY,QAAA,EAAQ;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV,CAAC;AAAAf,EAAA,CA9BKD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAgCT,eAAeA,GAAG;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}