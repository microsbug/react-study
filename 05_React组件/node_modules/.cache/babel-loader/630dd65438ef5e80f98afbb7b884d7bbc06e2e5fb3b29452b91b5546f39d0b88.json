{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/components/Logs/LogItem/LogItem.js\";\nimport React from 'react';\nimport MyDate from './MyDate/MyDate';\nimport './LogItem.css';\nimport Card from '../../UI/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogItem = props => {\n  // 在函数式组件中,属性就相当于函数的参数,可以通过参数来访问\n  // 可以在函数式组件中定义一个props,props指向的是一个对象\n  // 它包含了父组件中的所有参数\n  // console.log(props)\n\n  /**\n   * props属性是只读,不可修改!\n   */\n  // props.desc = 'vue.js' // 不能修改props属性\n  // console.log(props.desc)\n\n  /**\n   * 删除item的响应函数\n   */\n  const deleteItemHandler = () => {\n    // 临时性\n    window.confirm('该操作不可恢复，确认吗?');\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(MyDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"desc\",\n        children: props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [props.time, \"\\u5206\\u949F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: deleteItemHandler,\n        className: 'delete',\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = LogItem;\nexport default LogItem;\nvar _c;\n$RefreshReg$(_c, \"LogItem\");","map":{"version":3,"names":["React","MyDate","Card","jsxDEV","_jsxDEV","LogItem","props","deleteItemHandler","window","confirm","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","desc","time","onClick","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/components/Logs/LogItem/LogItem.js"],"sourcesContent":["import React from 'react'\nimport MyDate from './MyDate/MyDate'\nimport './LogItem.css'\nimport Card from '../../UI/Card/Card'\n\nconst LogItem = props => {\n    // 在函数式组件中,属性就相当于函数的参数,可以通过参数来访问\n    // 可以在函数式组件中定义一个props,props指向的是一个对象\n    // 它包含了父组件中的所有参数\n    // console.log(props)\n\n    /**\n     * props属性是只读,不可修改!\n     */\n    // props.desc = 'vue.js' // 不能修改props属性\n    // console.log(props.desc)\n\n    /**\n     * 删除item的响应函数\n     */\n    const deleteItemHandler = () => {\n        // 临时性\n        window.confirm('该操作不可恢复，确认吗?')\n    }\n\n    return (\n        <Card className=\"item\">\n            <MyDate date={props.date}/>\n\n            {/* 日志内容的容器 */}\n            <div className=\"content\">\n                {/*\n              如果将组件中的数据全部写死,将会导致组件无法动态设置,不具有使用价值\n                我们希望组件中的数据可以由外部设置,在组件中,父组件可以通过props(属性)传递数据给子组件\n          */}\n                <h2 className=\"desc\">{props.desc}</h2>\n                <div className=\"time\">{props.time}分钟</div>\n            </div>\n            {/* 添加一个删除组件 */}\n            <div>\n                <div onClick={deleteItemHandler} className={'delete'}>×</div>\n            </div>\n        </Card>\n    )\n}\n\nexport default LogItem\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,eAAe;AACtB,OAAOC,IAAI,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAGC,KAAK,IAAI;EACrB;EACA;EACA;EACA;;EAEA;AACJ;AACA;EACI;EACA;;EAEA;AACJ;AACA;EACI,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAC,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC;EAClC,CAAC;EAED,oBACIL,OAAA,CAACF,IAAI;IAACQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAClBP,OAAA,CAACH,MAAM;MAACW,IAAI,EAAEN,KAAK,CAACM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAG3BZ,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAKpBP,OAAA;QAAIM,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEL,KAAK,CAACW;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCZ,OAAA;QAAKM,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAEL,KAAK,CAACY,IAAI,EAAC,cAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAENZ,OAAA;MAAAO,QAAA,eACIP,OAAA;QAAKe,OAAO,EAAEZ,iBAAkB;QAACG,SAAS,EAAE,QAAS;QAAAC,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAAAI,EAAA,GAvCKf,OAAO;AAyCb,eAAeA,OAAO;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}