{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/components/Logs/Logs.js\";\n/* 日志的容器 */\nimport LogItem from './LogItem/LogItem';\nimport './Logs.css';\nimport Card from '../UI/Card/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = () => {\n  /**\n   * logsData 用来存储学习的日志，\n   *      这个数据除了当前组件Logs需要使用外，LogsForm也需要使用\n   *      当遇到一个数据需要被多个组件使用时，我们可以及拿过数据放到\n   *\n   */\n\n  // 模拟一组从服务器中获取的数据\n  const logsData = [{\n    id: '001',\n    date: new Date(2023, 1, 1, 15, 20),\n    desc: '学习前端React',\n    time: '20'\n  }, {\n    id: '002',\n    date: new Date(2023, 1, 11, 15, 30),\n    desc: '学习前端Angular',\n    time: '30'\n  }, {\n    id: '003',\n    date: new Date(2023, 1, 12, 15, 40),\n    desc: '学习前端Vue',\n    time: '50'\n  }, {\n    id: '004',\n    date: new Date(2023, 1, 13, 15, 50),\n    desc: '学习前端JavaScript',\n    time: '10'\n  }];\n\n  // 将数据放在JSX中\n  const logItemDate = logsData.map(item => /*#__PURE__*/_jsxDEV(LogItem, {\n    date: item.date,\n    desc: item.desc,\n    time: item.time\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: logItemDate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["LogItem","Card","jsxDEV","_jsxDEV","Logs","logsData","id","date","Date","desc","time","logItemDate","map","item","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/components/Logs/Logs.js"],"sourcesContent":["/* 日志的容器 */\nimport LogItem from './LogItem/LogItem'\nimport './Logs.css'\nimport Card from '../UI/Card/Card'\n\nconst Logs = () => {\n\n    /**\n     * logsData 用来存储学习的日志，\n     *      这个数据除了当前组件Logs需要使用外，LogsForm也需要使用\n     *      当遇到一个数据需要被多个组件使用时，我们可以及拿过数据放到\n     *\n     */\n\n        // 模拟一组从服务器中获取的数据\n    const logsData = [\n            {\n                id: '001',\n                date: new Date(2023, 1, 1, 15, 20),\n                desc: '学习前端React',\n                time: '20'\n            },\n            {\n                id: '002',\n                date: new Date(2023, 1, 11, 15, 30),\n                desc: '学习前端Angular',\n                time: '30'\n            },\n            {\n                id: '003',\n                date: new Date(2023, 1, 12, 15, 40),\n                desc: '学习前端Vue',\n                time: '50'\n            },\n            {\n                id: '004',\n                date: new Date(2023, 1, 13, 15, 50),\n                desc: '学习前端JavaScript',\n                time: '10'\n            }\n        ]\n\n    // 将数据放在JSX中\n    const logItemDate = logsData.map(item => (\n        <LogItem\n            key={item.id}\n            date={item.date}\n            desc={item.desc}\n            time={item.time}\n        />\n    ))\n\n    return (\n        <Card className=\"logs\">\n            {/* 在父组件中可以直接在子组件中设置属性 */}\n            {/* <LogItem test=\"123\" hello=\"abc\" fn={() => {}} />*/}\n\n            {logItemDate}\n\n            {/* {logsData.map(item => (\n        <LogItem\n          key={item.id}\n          date={item.date}\n          desc={item.desc}\n          time={item.time}\n        />\n\n        // 简写方式,这种需要你的参数与属性一一对应\n        // <LogItem key={item.id} {...item} />\n      ))} */}\n\n            {/* <LogItem date={logsData[0].date} desc={logsData[0].desc} time={logsData[0].time} /> */}\n        </Card>\n    )\n}\n\nexport default Logs\n"],"mappings":";AAAA;AACA,OAAOA,OAAO,MAAM,mBAAmB;AACvC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEf;AACJ;AACA;AACA;AACA;AACA;;EAEQ;EACJ,MAAMC,QAAQ,GAAG,CACT;IACIC,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClCC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACV,CAAC,EACD;IACIJ,EAAE,EAAE,KAAK;IACTC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnCC,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAE;EACV,CAAC,CACJ;;EAEL;EACA,MAAMC,WAAW,GAAGN,QAAQ,CAACO,GAAG,CAACC,IAAI,iBACjCV,OAAA,CAACH,OAAO;IAEJO,IAAI,EAAEM,IAAI,CAACN,IAAK;IAChBE,IAAI,EAAEI,IAAI,CAACJ,IAAK;IAChBC,IAAI,EAAEG,IAAI,CAACH;EAAK,GAHXG,IAAI,CAACP,EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIf,CACJ,CAAC;EAEF,oBACId,OAAA,CAACF,IAAI;IAACiB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAIjBR;EAAW;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeV,CAAC;AAEf,CAAC;AAAAG,EAAA,GArEKhB,IAAI;AAuEV,eAAeA,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}