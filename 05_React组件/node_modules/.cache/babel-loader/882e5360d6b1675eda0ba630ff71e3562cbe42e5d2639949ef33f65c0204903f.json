{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/Components/Logs/LogItem/LogItem.js\";\nimport React from 'react';\nimport MyDate from './MyDate/MyDate';\nimport './LogItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogItem = props => {\n  // 在函数式组件中,属性就相当于函数的参数,可以通过参数来访问\n  // 可以在函数式组件中定义一个props,props指向的是一个对象\n  // 它包含了父组件中的所有参数\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(MyDate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"desc\",\n        children: props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: \"40\\u5206\\u949F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = LogItem;\nexport default LogItem;\nvar _c;\n$RefreshReg$(_c, \"LogItem\");","map":{"version":3,"names":["React","MyDate","jsxDEV","_jsxDEV","LogItem","props","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","desc","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/Components/Logs/LogItem/LogItem.js"],"sourcesContent":["import React from 'react'\nimport MyDate from './MyDate/MyDate'\nimport './LogItem.css'\n\nconst LogItem = props => {\n  // 在函数式组件中,属性就相当于函数的参数,可以通过参数来访问\n  // 可以在函数式组件中定义一个props,props指向的是一个对象\n  // 它包含了父组件中的所有参数\n  console.log(props)\n\n  return (\n    <div className=\"item\">\n      <MyDate />\n\n      {/* 日志内容的容器 */}\n      <div className=\"content\">\n        {/* \n              如果将组件中的数据全部写死,将会导致组件无法动态设置,不具有使用价值\n                我们希望组件中的数据可以由外部设置,在组件中,父组件可以通过props(属性)传递数据给子组件\n          */}\n        <h2 className=\"desc\">{props.desc}</h2>\n        <div className=\"time\">40分钟</div>\n      </div>\n    </div>\n  )\n}\n\nexport default LogItem\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,OAAO,GAAGC,KAAK,IAAI;EACvB;EACA;EACA;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,oBACEF,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBN,OAAA,CAACF,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGVV,OAAA;MAAKK,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAKtBN,OAAA;QAAIK,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEJ,KAAK,CAACS;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCV,OAAA;QAAKK,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAE,EAAA,GArBKX,OAAO;AAuBb,eAAeA,OAAO;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}