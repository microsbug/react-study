{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const clickHandler = () => {\n    alert('我是App中的clickHandler');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '200px',\n      height: '200px',\n      margin: '100px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => alert(123),\n      children: \"\\u70B9\\u6211\\u4E00\\u4E0B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"clickHandler\\u51FD\\u6570\\u6D4B\\u8BD5!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * <button onclick=\"alert(123)\"点我一下</button>\n *\n * <button id=\"btn1\">点我一下</button>\n *\n * document.getElementById(\"btn1\").onclick = function() {}\n *\n * document.getElementById(\"btn1\").addEventListener(\"click\", function() {}, false)\n *\n */\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","clickHandler","alert","_jsxDEV","style","width","height","margin","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/App.js"],"sourcesContent":["const App = () => {\n  const clickHandler = () => {\n    alert('我是App中的clickHandler')\n  }\n\n  return (\n    <div style={{ width: '200px', height: '200px', margin: '100px auto' }}>\n      {/*\n            在React中事件需要通过元素的属性来设置,\n              和原生JS不同,在React中事件的属性需要使用驼峰命名法\n                onclick -> onClick\n                onchange -> onChange\n              属性值不能直接执行代码,而是需要一个回调函数:\n                onclick=\"alert(123)\"\n                onClick={() => alert(123)}\n        */}\n\n      <button onClick={() => alert(123)}>点我一下</button>\n      <button onClick={clickHandler}>clickHandler函数测试!</button>\n    </div>\n  )\n}\n\n/**\n * <button onclick=\"alert(123)\"点我一下</button>\n *\n * <button id=\"btn1\">点我一下</button>\n *\n * document.getElementById(\"btn1\").onclick = function() {}\n *\n * document.getElementById(\"btn1\").addEventListener(\"click\", function() {}, false)\n *\n */\nexport default App\n"],"mappings":";;AAAA,MAAMA,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,qBAAqB,CAAC;EAC9B,CAAC;EAED,oBACEC,OAAA;IAAKC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAa,CAAE;IAAAC,QAAA,gBAWpEL,OAAA;MAAQM,OAAO,EAAEA,CAAA,KAAMP,KAAK,CAAC,GAAG,CAAE;MAAAM,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDV,OAAA;MAAQM,OAAO,EAAER,YAAa;MAAAO,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATAC,EAAA,GAvBMd,GAAG;AAiCT,eAAeA,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}