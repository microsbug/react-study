{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/Components/Logs/Logs.js\";\n/* 日志的容器 */\nimport LogItem from './LogItem/LogItem';\nimport './Logs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = () => {\n  // 模拟一组从服务器中获取的数据\n  const logsDate = [{\n    date: new Date(2023, 1, 1, 15, 20),\n    desc: '学习前端React',\n    time: '20'\n  }, {\n    date: new Date(2023, 1, 1, 15, 30),\n    desc: '学习前端Angular',\n    time: '30'\n  }, {\n    date: new Date(2023, 1, 1, 15, 40),\n    desc: '学习前端Vue',\n    time: '50'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logs\",\n    children: logsDate.map((item, index) => /*#__PURE__*/_jsxDEV(LogItem, {\n      date: item.date,\n      desc: item.desc,\n      time: item.time\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["LogItem","jsxDEV","_jsxDEV","Logs","logsDate","date","Date","desc","time","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/Components/Logs/Logs.js"],"sourcesContent":["/* 日志的容器 */\nimport LogItem from './LogItem/LogItem'\nimport './Logs.css'\n\nconst Logs = () => {\n  // 模拟一组从服务器中获取的数据\n  const logsDate = [\n    {\n      date: new Date(2023, 1, 1, 15, 20),\n      desc: '学习前端React',\n      time: '20'\n    },\n    {\n      date: new Date(2023, 1, 1, 15, 30),\n      desc: '学习前端Angular',\n      time: '30'\n    },\n    {\n      date: new Date(2023, 1, 1, 15, 40),\n      desc: '学习前端Vue',\n      time: '50'\n    }\n  ]\n\n  return (\n    <div className=\"logs\">\n      {/* 在父组件中可以直接在子组件中设置属性 */}\n      {/* <LogItem test=\"123\" hello=\"abc\" fn={() => {}} />*/}\n\n      {logsDate.map((item, index) => (\n        <LogItem\n          key={index}\n          date={item.date}\n          desc={item.desc}\n          time={item.time}\n        />\n      ))}\n\n      {/* <LogItem date={logsDate[0].date} desc={logsDate[0].desc} time={logsDate[0].time} /> */}\n    </div>\n  )\n}\n\nexport default Logs\n"],"mappings":";AAAA;AACA,OAAOA,OAAO,MAAM,mBAAmB;AACvC,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB;EACA,MAAMC,QAAQ,GAAG,CACf;IACEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClCC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClCC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;EACR,CAAC,EACD;IACEH,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClCC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;EACR,CAAC,CACF;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,MAAM;IAAAC,QAAA,EAIlBN,QAAQ,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBX,OAAA,CAACF,OAAO;MAENK,IAAI,EAAEO,IAAI,CAACP,IAAK;MAChBE,IAAI,EAAEK,IAAI,CAACL,IAAK;MAChBC,IAAI,EAAEI,IAAI,CAACJ;IAAK,GAHXK,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAEV,CAAC;AAAAC,EAAA,GArCKf,IAAI;AAuCV,eAAeA,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}