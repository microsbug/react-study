{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/components/LogsForm/LogsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport \"./LogsForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogsForm = () => {\n  _s();\n  /**\n   * 当表单项发生变化的时候,获取用户输入的内容\n   */\n  // 创建撒个变量,用来存储表单中的数据\n  /*  let inputDate = ''\n        let inputDesc = ''\n        let inputTime = 0 */\n\n  // const [inputDate, setInputDate] = useState('')\n  // const [inputDesc, setInputDesc] = useState('')\n  // const [inputTime, setInputTime] = useState('')\n\n  // 将表单数据统一到一个state中\n  const [formDate, setFormDate] = useState({\n    inputDate: \"\",\n    inputDesc: \"\",\n    inputTime: \"\"\n  });\n\n  // 创建一个响应函数,监听表单项的变化\n  const dateChangeHandler = e => {\n    // 获取到当前触发事件的对象\n    // 事件对象中保存了当前事件触发时的所有信息\n    // event.target: 当前触发事件的对象(DOM对象)\n    // console.log(e.target.value)\n    // inputDate = e.target.value\n    // setInputDate(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputDate: e.target.value\n    });\n  };\n  const descChangeHandler = e => {\n    // inputDesc = e.target.value\n    // setInputDesc(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputDesc: e.target.value\n    });\n  };\n  const timeChangeHandler = e => {\n    // inputTime = e.target.value\n    // setInputTime(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputTime: e.target.value\n    });\n  };\n\n  // 当表单提交时汇总表单的数据\n  /**\n   * 在React中表单不需要自行提交,而是通过React后台提交\n   */\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    // 获取到表单中的数据,日期,内容,时长\n    // 将数据拼装为一个对象\n    const newLog = {\n      date: new Date(formDate.inputDate),\n      desc: formDate.inputDesc,\n      time: +formDate.inputTime\n    };\n    console.log(newLog);\n    // console.log(inputDate, inputDesc, inputTime)\n\n    /**\n     * 提交表单后如何清空表单中的旧数据\n     *    现在这种表单在React当中,我们称之为非受控组件\n     * 我们可以将表单中的数据存储到state,\n     *    然后将state设置为表单项value值,\n     *    这样当表单项发生变化,state也会发生变化,\n     *    反之, state发生变化,表单项也会随之改变,这种操作我们称之为双向绑定\n     *    这样一来,表单项就成为了一个受控组件\n     */\n    // 清空表单项\n    // setInputDate('')\n    // setInputDesc('')\n    // setInputTime('')\n    setFormDate({\n      inputDate: \"\",\n      inputDesc: \"\",\n      inputTime: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"logs-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"\\u65E5\\u671F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: dateChangeHandler,\n            type: \"date\",\n            id: \"date\",\n            value: formDate.inputDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"desc\",\n            children: \"\\u5185\\u5BB9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: descChangeHandler,\n            type: \"text\",\n            id: \"desc\",\n            value: formDate.inputDesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"\\u65F6\\u957F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: timeChangeHandler,\n            type: \"number\",\n            id: \"time\",\n            value: formDate.inputTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u6DFB\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(LogsForm, \"PDBxWscEFE3uJABUxU+IRFZei+4=\");\n_c = LogsForm;\nexport default LogsForm;\nvar _c;\n$RefreshReg$(_c, \"LogsForm\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","LogsForm","_s","formDate","setFormDate","inputDate","inputDesc","inputTime","dateChangeHandler","e","target","value","descChangeHandler","timeChangeHandler","formSubmitHandler","preventDefault","newLog","date","Date","desc","time","console","log","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","id","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/components/LogsForm/LogsForm.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport Card from \"../UI/Card/Card\"\nimport \"./LogsForm.css\"\n\nconst LogsForm = () => {\n  /**\n   * 当表单项发生变化的时候,获取用户输入的内容\n   */\n  // 创建撒个变量,用来存储表单中的数据\n  /*  let inputDate = ''\n        let inputDesc = ''\n        let inputTime = 0 */\n\n  // const [inputDate, setInputDate] = useState('')\n  // const [inputDesc, setInputDesc] = useState('')\n  // const [inputTime, setInputTime] = useState('')\n\n  // 将表单数据统一到一个state中\n  const [formDate, setFormDate] = useState({\n    inputDate: \"\",\n    inputDesc: \"\",\n    inputTime: \"\",\n  })\n\n  // 创建一个响应函数,监听表单项的变化\n  const dateChangeHandler = (e) => {\n    // 获取到当前触发事件的对象\n    // 事件对象中保存了当前事件触发时的所有信息\n    // event.target: 当前触发事件的对象(DOM对象)\n    // console.log(e.target.value)\n    // inputDate = e.target.value\n    // setInputDate(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputDate: e.target.value,\n    })\n  }\n\n  const descChangeHandler = (e) => {\n    // inputDesc = e.target.value\n    // setInputDesc(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputDesc: e.target.value,\n    })\n  }\n\n  const timeChangeHandler = (e) => {\n    // inputTime = e.target.value\n    // setInputTime(e.target.value)\n    setFormDate({\n      ...formDate,\n      inputTime: e.target.value,\n    })\n  }\n\n  // 当表单提交时汇总表单的数据\n  /**\n   * 在React中表单不需要自行提交,而是通过React后台提交\n   */\n  const formSubmitHandler = (e) => {\n    e.preventDefault()\n    // 获取到表单中的数据,日期,内容,时长\n    // 将数据拼装为一个对象\n    const newLog = {\n      date: new Date(formDate.inputDate),\n      desc: formDate.inputDesc,\n      time: +formDate.inputTime,\n    }\n    console.log(newLog)\n    // console.log(inputDate, inputDesc, inputTime)\n\n    /**\n     * 提交表单后如何清空表单中的旧数据\n     *    现在这种表单在React当中,我们称之为非受控组件\n     * 我们可以将表单中的数据存储到state,\n     *    然后将state设置为表单项value值,\n     *    这样当表单项发生变化,state也会发生变化,\n     *    反之, state发生变化,表单项也会随之改变,这种操作我们称之为双向绑定\n     *    这样一来,表单项就成为了一个受控组件\n     */\n    // 清空表单项\n    // setInputDate('')\n    // setInputDesc('')\n    // setInputTime('')\n    setFormDate({\n      inputDate: \"\",\n      inputDesc: \"\",\n      inputTime: \"\",\n    })\n  }\n\n  return (\n    <div>\n      <Card className=\"logs-form\">\n        <form onSubmit={formSubmitHandler}>\n          <div className={\"form-item\"}>\n            <label htmlFor=\"date\">日期</label>\n            <input\n              onChange={dateChangeHandler}\n              type=\"date\"\n              id=\"date\"\n              value={formDate.inputDate}\n            />\n          </div>\n          <div className={\"form-item\"}>\n            <label htmlFor=\"desc\">内容</label>\n            <input\n              onChange={descChangeHandler}\n              type=\"text\"\n              id=\"desc\"\n              value={formDate.inputDesc}\n            />\n          </div>\n          <div className={\"form-item\"}>\n            <label htmlFor=\"time\">时长</label>\n            <input\n              onChange={timeChangeHandler}\n              type=\"number\"\n              id=\"time\"\n              value={formDate.inputTime}\n            />\n          </div>\n          <div className={\"form-btn\"}>\n            <button>添加</button>\n          </div>\n        </form>\n      </Card>\n    </div>\n  )\n}\n\nexport default LogsForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}