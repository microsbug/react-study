{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/components/LogsForm/LogsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport \"./LogsForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogsForm = () => {\n  _s();\n  /**\n   * 当表单项发生变化的时候,获取用户输入的内容\n   */\n  // 创建撒个变量,用来存储表单中的数据\n  /*  let inputDate = ''\n      let inputDesc = ''\n      let inputTime = 0 */\n\n  const [inputDate, setInputDate] = useState('');\n  const [inputDesc, setInputDesc] = useState('');\n  const [inputTime, setInputTime] = useState('');\n\n  // 创建一个响应函数,监听表单项的变化\n  const dateChangeHandler = e => {\n    setInputDate(e.target.value);\n  };\n  const descChangeHandler = e => {\n    setInputDesc(e.target.value);\n  };\n  const timeChangeHandler = e => {\n    setInputTime(e.target.value);\n  };\n\n  // 当表单提交时汇总表单的数据\n  /**\n   * 在React中表单不需要自行提交,而是通过React后台提交\n   */\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    // 获取到表单中的数据,日期,内容,时长\n    // 将数据拼装为一个对象\n    const newLog = {\n      date: new Date(inputDate),\n      desc: inputDesc,\n      time: +inputTime\n    };\n    console.log(newLog);\n    // console.log(inputDate, inputDesc, inputTime)\n\n    /**\n     * 提交表单后如何清空表单中的旧数据\n     *    现在这种表单在React当中,我们称之为非受控组件\n     * 我们可以将表单中的数据存储到state,\n     *    然后将state设置为表单项value值,\n     *    这样当表单项发生变化,state也会发生变化,\n     *    反之, state发生变化,表单项也会随之改变,这种操作我们称之为双向绑定\n     *    这样一来,表单项就成为了一个受控组件\n     */\n    // 清空表单项\n    // setInputDate('')\n    // setInputDesc('')\n    // setInputTime('')\n    setFormDate({\n      inputDate: \"\",\n      inputDesc: \"\",\n      inputTime: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"logs-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"\\u65E5\\u671F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: dateChangeHandler,\n            type: \"date\",\n            id: \"date\",\n            value: formDate.inputDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"desc\",\n            children: \"\\u5185\\u5BB9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: descChangeHandler,\n            type: \"text\",\n            id: \"desc\",\n            value: formDate.inputDesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"\\u65F6\\u957F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: timeChangeHandler,\n            type: \"number\",\n            id: \"time\",\n            value: formDate.inputTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u6DFB\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(LogsForm, \"IdVTPRq7YYnPkny6ZzqHTTr8f2U=\");\n_c = LogsForm;\nexport default LogsForm;\nvar _c;\n$RefreshReg$(_c, \"LogsForm\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","LogsForm","_s","inputDate","setInputDate","inputDesc","setInputDesc","inputTime","setInputTime","dateChangeHandler","e","target","value","descChangeHandler","timeChangeHandler","formSubmitHandler","preventDefault","newLog","date","Date","desc","time","console","log","setFormDate","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","id","formDate","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/components/LogsForm/LogsForm.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport Card from \"../UI/Card/Card\"\nimport \"./LogsForm.css\"\n\nconst LogsForm = () => {\n    /**\n     * 当表单项发生变化的时候,获取用户输入的内容\n     */\n    // 创建撒个变量,用来存储表单中的数据\n    /*  let inputDate = ''\n        let inputDesc = ''\n        let inputTime = 0 */\n\n    const [inputDate, setInputDate] = useState('')\n    const [inputDesc, setInputDesc] = useState('')\n    const [inputTime, setInputTime] = useState('')\n\n    // 创建一个响应函数,监听表单项的变化\n    const dateChangeHandler = (e) => {\n        setInputDate(e.target.value)\n    }\n\n    const descChangeHandler = (e) => {\n        setInputDesc(e.target.value)\n    }\n\n    const timeChangeHandler = (e) => {\n        setInputTime(e.target.value)\n    }\n\n    // 当表单提交时汇总表单的数据\n    /**\n     * 在React中表单不需要自行提交,而是通过React后台提交\n     */\n    const formSubmitHandler = (e) => {\n        e.preventDefault()\n        // 获取到表单中的数据,日期,内容,时长\n        // 将数据拼装为一个对象\n        const newLog = {\n            date: new Date(inputDate),\n            desc: inputDesc,\n            time: +inputTime,\n        }\n        console.log(newLog)\n        // console.log(inputDate, inputDesc, inputTime)\n\n        /**\n         * 提交表单后如何清空表单中的旧数据\n         *    现在这种表单在React当中,我们称之为非受控组件\n         * 我们可以将表单中的数据存储到state,\n         *    然后将state设置为表单项value值,\n         *    这样当表单项发生变化,state也会发生变化,\n         *    反之, state发生变化,表单项也会随之改变,这种操作我们称之为双向绑定\n         *    这样一来,表单项就成为了一个受控组件\n         */\n        // 清空表单项\n        // setInputDate('')\n        // setInputDesc('')\n        // setInputTime('')\n        setFormDate({\n            inputDate: \"\",\n            inputDesc: \"\",\n            inputTime: \"\",\n        })\n    }\n\n    return (\n        <div>\n            <Card className=\"logs-form\">\n                <form onSubmit={formSubmitHandler}>\n                    <div className={\"form-item\"}>\n                        <label htmlFor=\"date\">日期</label>\n                        <input\n                            onChange={dateChangeHandler}\n                            type=\"date\"\n                            id=\"date\"\n                            value={formDate.inputDate}\n                        />\n                    </div>\n                    <div className={\"form-item\"}>\n                        <label htmlFor=\"desc\">内容</label>\n                        <input\n                            onChange={descChangeHandler}\n                            type=\"text\"\n                            id=\"desc\"\n                            value={formDate.inputDesc}\n                        />\n                    </div>\n                    <div className={\"form-item\"}>\n                        <label htmlFor=\"time\">时长</label>\n                        <input\n                            onChange={timeChangeHandler}\n                            type=\"number\"\n                            id=\"time\"\n                            value={formDate.inputTime}\n                        />\n                    </div>\n                    <div className={\"form-btn\"}>\n                        <button>添加</button>\n                    </div>\n                </form>\n            </Card>\n        </div>\n    )\n}\n\nexport default LogsForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}