{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react_study/05_React\\u7EC4\\u4EF6/src/components/Logs/Logs.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n/* 日志的容器 */\nimport LogItem from './LogItem/LogItem';\nimport './Logs.css';\nimport Card from '../UI/Card/Card';\nimport LogFilter from './LogFilter/LogFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = props => {\n  _s();\n  // 创建一个存储年份的state\n  const [year, setYear] = useState(2023);\n\n  // 过滤数据，只显示某一年的数据\n  let filterData = props.logsData.filter(item => item.date.getFullYear() === year);\n  console.log(filterData);\n\n  /**\n   * 创建一个修改年份的函数\n   */\n  const changeYearHandler = year => {\n    setYear(year);\n  };\n\n  /**\n   * 将数据放在JSX中\n   */\n  let logItemData = filterData.map((item, index) => /*#__PURE__*/_jsxDEV(LogItem, {\n    onDelLog: () => props.onDelLog(item.id),\n    date: item.date,\n    desc: item.desc,\n    time: item.time\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n  if (logItemData.length === 0) {\n    logItemData = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-logs\",\n      children: \"\\u6CA1\\u6709\\u627E\\u5230\\u5B66\\u4E60\\u7684\\u65E5\\u5FD7\\uFF01\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"logs\",\n    children: [/*#__PURE__*/_jsxDEV(LogFilter, {\n      year: year,\n      onYearChange: changeYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), logItemData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"mgNMLC9Aega1WNfkD3lW2YOj3Bg=\");\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["useState","LogItem","Card","LogFilter","jsxDEV","_jsxDEV","Logs","props","_s","year","setYear","filterData","logsData","filter","item","date","getFullYear","console","log","changeYearHandler","logItemData","map","index","onDelLog","id","desc","time","fileName","_jsxFileName","lineNumber","columnNumber","length","className","children","onYearChange","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/react_study/05_React组件/src/components/Logs/Logs.js"],"sourcesContent":["import { useState } from 'react'\n/* 日志的容器 */\nimport LogItem from './LogItem/LogItem'\nimport './Logs.css'\nimport Card from '../UI/Card/Card'\nimport LogFilter from './LogFilter/LogFilter'\n\nconst Logs = (props) => {\n\n    // 创建一个存储年份的state\n    const [year, setYear] = useState(2023)\n\n    // 过滤数据，只显示某一年的数据\n    let filterData = props.logsData.filter(item => item.date.getFullYear() === year)\n\n    console.log(filterData)\n\n    /**\n     * 创建一个修改年份的函数\n     */\n    const changeYearHandler = (year) => {\n        setYear(year)\n    }\n\n    /**\n     * 将数据放在JSX中\n     */\n    let logItemData = filterData.map((item, index) => (\n        <LogItem\n            onDelLog={() => props.onDelLog(item.id)}\n            key={item.id}\n            date={item.date}\n            desc={item.desc}\n            time={item.time}\n        />\n    ))\n\n    if (logItemData.length === 0) {\n        logItemData = <p className='no-logs'>没有找到学习的日志！</p>\n    }\n\n    return (\n        <Card className='logs'>\n            {/*引入年份的过滤组件*/}\n            <LogFilter year={year} onYearChange={changeYearHandler} />\n            {logItemData}\n\n        </Card>\n    )\n}\n\nexport default Logs\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,SAAS,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,IAAIW,UAAU,GAAGJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKP,IAAI,CAAC;EAEhFQ,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;;EAEvB;AACJ;AACA;EACI,MAAMQ,iBAAiB,GAAIV,IAAI,IAAK;IAChCC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;;EAED;AACJ;AACA;EACI,IAAIW,WAAW,GAAGT,UAAU,CAACU,GAAG,CAAC,CAACP,IAAI,EAAEQ,KAAK,kBACzCjB,OAAA,CAACJ,OAAO;IACJsB,QAAQ,EAAEA,CAAA,KAAMhB,KAAK,CAACgB,QAAQ,CAACT,IAAI,CAACU,EAAE,CAAE;IAExCT,IAAI,EAAED,IAAI,CAACC,IAAK;IAChBU,IAAI,EAAEX,IAAI,CAACW,IAAK;IAChBC,IAAI,EAAEZ,IAAI,CAACY;EAAK,GAHXZ,IAAI,CAACU,EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIf,CACJ,CAAC;EAEF,IAAIV,WAAW,CAACW,MAAM,KAAK,CAAC,EAAE;IAC1BX,WAAW,gBAAGf,OAAA;MAAG2B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACvD;EAEA,oBACIzB,OAAA,CAACH,IAAI;IAAC8B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAElB5B,OAAA,CAACF,SAAS;MAACM,IAAI,EAAEA,IAAK;MAACyB,YAAY,EAAEf;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDV,WAAW;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEf,CAAC;AAAAtB,EAAA,CA1CKF,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AA4CV,eAAeA,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}